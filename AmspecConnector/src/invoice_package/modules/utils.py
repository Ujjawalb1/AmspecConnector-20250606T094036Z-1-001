from logger import logger

MALAYSIA_STATE_CODE_MAP = {
    "johor": "01",
    "kedah": "02",
    "kelantan": "03",
    "melaka": "04",
    "negeri sembilan": "05",
    "pahang": "06",
    "pulau pinang": "07",
    "perak": "08",
    "perlis": "09",
    "selangor": "10",
    "terengganu": "11",
    "sabah": "12",
    "sarawak": "13",
    "wilayah persekutuan kuala lumpur": "14",
    "wilayah persekutuan labuan": "15",
    "wilayah persekutuan putrajaya": "16",
    "not applicable": "17"
}

def get_state_codes(state):
    normalized = state.strip().lower()
    return MALAYSIA_STATE_CODE_MAP.get(normalized, "17")


SERVICE_QUANTITY_MAP={
    "Attendance": "E51",
    "Attendances": "E51",
    "AU": "XUN",
    "Courier": "EA",
    "Day": "E49",
    "Days": "E49",
    "Drums": "XDR",
    "ea": "EA",
    "Each": "EA",
    "Eachs": "EA",
    "ervice Unit": "E48",
    "Fixed Rate": "1I",
    "FixedRate": "1I",
    "Flatrate": "1I",
    "Gauge": "XUN",
    "Grade": "EA",
    "Hour": "HUR",
    "Hours": "HUR",
    "hr": "HUR",
    "Hrs": "HUR",
    "job": "E51",
    "JobLT": "E51",
    "KM": "KMT",
    "Litre": "LTR",
    "LS": "LS",
    "LService Unit": "E48",
    "LT": "TNE",
    "Lum Sum": "LS",
    "Lump  Sum": "LS",
    "Lump  Sum Unit": "LS",
    "Lump  SumUnit": "LS",
    "lump sum": "LS",
    "Lump Sums": "LS",
    "Lumpaum": "LS",
    "Lumpsum": "LS",
    "Lumpsums": "LS",
    "Lumsum": "LS",
    "Man/Day": "E49",
    "Max": "LS",
    "Metric Tons": "TNE",
    "Miles": "SMI",
    "Min": "LS",
    "Min Fee": "LS",
    "Month/ Pax": "IE",
    "MT": "TNE",
    "per shipment": "SX",
    "per trip": "E54",
    "Rate/Day": "E49",
    "rtp": "EA",
    "Sample": "XUN",
    "Samples": "XUN",
    "Seals": "EA",
    "Servce Unit": "E48",
    "Service": "E48",
    "Service  Unit": "E48",
    "Service Fee": "E48",
    "Service U  nit": "E48",
    "Service Uni": "E48",
    "service unit": "E48",
    "Service Units": "E48",
    "ServiceU  nit": "E48",
    "ServiceU nit": "E48",
    "ServiceUnit": "E48",
    "Serviec Unit": "E48",
    "Sevice Unit": "E48",
    "Shipment": "SX",
    "Shipmentnt": "SX",
    "Shipments": "SX",
    "SService Unit": "E48",
    "Sum": "LS",
    "Survey": "E51",
    "Tank": "EA",
    "Tanks": "EA",
    "Test": "E53",
    "Total": "XLT",
    "Tri[": "E54",
    "trip": "E54",
    "Trips": "E54",
    "Trucks": "E54",
    "Ttrip": "E54",
    "Unit": "XUN",
    "Units": "XUN",
    "Vessel": "SX",
    "Visit": "E54",
    "Working  Day": "E49",
    "Working  Days": "E49",
    "Working Day": "E49",
    "Working Days": "E49",
    "WorkingDay": "E49",

}
def get_unit_of_measure_code(uom):
    if not uom:
        return "None"  # default code for missing UOM
    return SERVICE_QUANTITY_MAP.get(uom, SERVICE_QUANTITY_MAP.get(uom.lower(), "H87"))
